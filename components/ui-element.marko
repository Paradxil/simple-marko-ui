style {
    :root {
        --background-1: #fff;
        --background-2: #444;
        --accent-1: #f1f1f1;
        --accent-2: #aaa;
        --text-1: #444;
        --text-2: #fff;
        --rounded-radius: 4px;
        --padding: 8px;
        --padding-narrow: 4px;
        --padding-wide: 32px;
    }

    body {
        display: flex;
        min-height: 100vh;
        width: 100%;
        background-color: var(--background-1);
        color: var(--text-1);
    }

    * {
        padding: 0px;
        margin: 0px;
        box-sizing: border-box;
    }

    .ui-element.filled {
        background-color: var(--background-2);
        color: var(--text-2);
    }

    .ui-element.accent {
        background-color: var(--accent-1);
        color: var(--text-1);
    }

    .ui-element.rounded {
        border-radius: var(--rounded-radius);
    }

    .ui-element.padded {
        padding: var(--padding);
    }

    .ui-element.paddedwide {
        padding: var(--padding-wide);
    }

    .ui-element.paddednarrow {
        padding: var(--padding-narrow);
    }

    .ui-element.centered {
        text-align: center;
    }

    .ui-element.alignleft {
        text-align: left;
    }

    .ui-element.alignright {
        text-align: right;
    }

    .ui-element.fullwidth {
        width: 100%;
    }
}

// Check for these keywords in the input and add them to the class list if present
$ const keywords = ["filled", "rounded", "accent", "padded", "centered", "fullwidth", "alignleft", "alignright", "paddedwide", "paddednarrow"];
$ let classes = [input.class||null];
$ classes.push("ui-element");
$ for(let word of keywords) {
    if(input[word]||false === true) {
        classes.push(word);
    }
}

<${input.tag ? input.tag : 'div'} ...input class=classes id=input.id style=input.style on-click("handleClick") on-input("handleInput")>
    <${input.renderBody}/>
</>